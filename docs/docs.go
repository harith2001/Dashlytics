// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Harith"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/country-revenue": {
            "get": {
                "description": "Returns a list of countries with total revenue and transaction count per product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "revenue"
                ],
                "summary": "Get country-level revenue data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/adapter.CountryRevenue"
                            }
                        }
                    }
                }
            }
        },
        "/monthly-sales": {
            "get": {
                "description": "Returns quantity of items sold grouped by month, supports sort and order query params",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sales"
                ],
                "summary": "Get total quantity sold per month",
                "parameters": [
                    {
                        "enum": [
                            "month",
                            "sales"
                        ],
                        "type": "string",
                        "description": "Sort by 'month' or 'sales'",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order: 'asc' or 'desc'",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/adapter.MonthlySales"
                            }
                        }
                    }
                }
            }
        },
        "/top-products": {
            "get": {
                "description": "Returns top products with quantity sold and stock",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get top 20 most frequently purchased products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/adapter.TopProduct"
                            }
                        }
                    }
                }
            }
        },
        "/top-regions": {
            "get": {
                "description": "Returns regions with highest sales and revenue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "regions"
                ],
                "summary": "Get top 30 regions by total revenue and items sold",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/adapter.RegionStats"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "adapter.CountryRevenue": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "total_revenue": {
                    "type": "number"
                },
                "transaction_count": {
                    "type": "integer"
                }
            }
        },
        "adapter.MonthlySales": {
            "type": "object",
            "properties": {
                "month": {
                    "description": "format: \"YYYY-MM\"",
                    "type": "string"
                },
                "total_quantity_sold": {
                    "type": "integer"
                }
            }
        },
        "adapter.RegionStats": {
            "type": "object",
            "properties": {
                "region": {
                    "type": "string"
                },
                "total_item_sold": {
                    "type": "integer"
                },
                "total_revenue": {
                    "type": "number"
                }
            }
        },
        "adapter.TopProduct": {
            "type": "object",
            "properties": {
                "product_name": {
                    "type": "string"
                },
                "stock_quantity": {
                    "type": "integer"
                },
                "total_quantity_sold": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Dashlytics API",
	Description:      "Backend for visualizing large-scale CSV analytics in Go",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
